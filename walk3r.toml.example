# Walk3r 2.0 Configuration Example
# Copy this file to walk3r.toml and customize for your project

[walk3r]
# Path to your Python project (relative to this config file)
root_path = "."

# Where to save analysis results
output_dir = "./walk3r_reports"

# Output formats: json, csv, dot
formats = ["json", "csv"]

# Analysis features (set to false to disable)
enable_complexity = true      # Code complexity analysis
enable_db_detection = true    # Database operation detection
enable_db_compliance = true   # Database architecture compliance
enable_doc_coverage = true    # Documentation coverage analysis
enable_metrics = true         # Code metrics and statistics
enable_summary = true         # Human-readable summaries

# Complexity analysis thresholds
max_function_length = 30      # Flag functions longer than this
max_complexity_score = 10     # Flag functions more complex than this
max_parameter_count = 6       # Flag functions with more parameters

# Database detection patterns (customize for your project)
db_methods = ["execute", "query", "find", "insert", "update", "delete", "save", "create"]
db_modules = ["sqlite3", "sqlalchemy", "pymongo", "psycopg2", "mysql", "redis", "django.db"]

# Database compliance patterns (for architectural analysis)
[walk3r.violation_patterns]
direct_redis = [
    "\\.redis\\.",
    "redis\\..*\\(",
    "\\.lpush\\(",
    "\\.xread\\(",
    "\\.hget\\(",
    "\\.zrangebyscore\\(",
    "\\.pipeline\\(\\)",
]
direct_neo4j = [
    "session\\.run\\(",
    "\\.neo4j\\.",
    "driver\\.session\\(",
    "neo4j\\..*\\(",
]
direct_sql = [
    "cursor\\.execute\\(",
    "\\.execute\\s*\\(",
    "SELECT\\s+.*FROM",
    "INSERT\\s+INTO",
    "UPDATE\\s+.*SET",
    "DELETE\\s+FROM",
]

[walk3r.service_patterns]
system_db_service = [
    "system_db\\.store_config\\(",
    "system_db\\.get_config\\(",
    "system_db\\.query_metrics\\(",
    "system_db_service\\.",
]
memory_db_service = [
    "memory_db\\.store_memory\\(",
    "memory_db\\.fetch_memories\\(",
    "memory_db_service\\.",
]
repository_pattern = [
    "Repository\\(",
    "\\.repository\\.",
    "_repo\\.",
]